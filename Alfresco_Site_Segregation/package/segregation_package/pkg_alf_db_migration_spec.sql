create or replace PACKAGE PKG_ALF_DB_MIGRATION
AS
  /*******************************************************************************
  Program Name: PKG_ALF_DB_MIGRATION
  Purpose: This Package is used for migrating sponsor specific data to a new environment
  Author: SAFED DB Team
  Creation Date: 09-JAN-2023
  Modified By:
  Modification Date:
  Modification Remarks:
  *******************************************************************************/
  V_DB_LINK VARCHAR2(100);
  V_SPONSOR VARCHAR2(20);
/*******************************************************************************
Program Name: INSERT_NODE
Purpose: This SP is the driving procedure to perform the migration activity.
Author: Safedx DB Team
Creation Date: 09-JAN-2023
Modified By:
Modification Date:
Modification Remarks: 
*******************************************************************************/  
PROCEDURE SP_ALF_DB_MIGRATION(IP_DB_LINK IN VARCHAR2, IP_SPONSOR_NAME IN VARCHAR2);
PROCEDURE SP_SPONSOR_DATA_SEGREGATION;
PROCEDURE SP_INSERT_USER_AUTHORITY_PART1;
PROCEDURE SP_INSERT_USER_AUTHORITY_PART2;
PROCEDURE SP_INSERT_USER_AUTHORITY_PART3;
PROCEDURE SP_INSERT_USER_AUTHORITY_PART4;
PROCEDURE SP_INSERT_USER_AUTHORITY_PART5;
PROCEDURE SP_INSERT_SITE_WORKFLOW_PART1;
PROCEDURE SP_INSERT_SITE_WORKFLOW_PART2;
PROCEDURE SP_REPROCESS_PENDING_WF_RECS;
PROCEDURE SP_INSERT_ARCHIVE_DATA;
PROCEDURE SP_INSERT_VERSION_DATA;
PROCEDURE SP_FIXING_NODE_ASSOC_DATA;
PROCEDURE SP_FIX_AUTHORITY_DATA;
PROCEDURE SP_FIX_MISSING_PERSON_DATA;
PROCEDURE SP_FIX_SYSTEM_USERS_DATA;
PROCEDURE SP_FIX_PERSON_MAPPING_DATA;
PROCEDURE SP_FIX_MISSING_CONTENT_DATA;
PROCEDURE SP_FIX_ACL_INHERITANCE_DATA;
PROCEDURE SP_FIX_ASSOCIATION_DATA;
PROCEDURE SEQUENCE_SYNCHRONIZATION;


PROCEDURE SP_INSERT_SAFEDX_SITE_FOLDER_DATA;
PROCEDURE SP_SYSTEM_DATA_SEGREGATION;
PROCEDURE SP_INSERT_SYSTEM_MASTERDATA;
PROCEDURE SP_INSERT_SYSTEM_AUDITmODEL_FEED_LOCK;
PROCEDURE SP_INSERT_STORE_SUBDATA_PART2;
PROCEDURE SP_INSERT_STORE_SUBDATA_PART1;
PROCEDURE SP_INSERT_SUBDATA_PART1;
PROCEDURE SP_INSERT_SUBDATA_PART2;
PROCEDURE SP_INSERT_SUBDATA_PART3;
PROCEDURE SP_INSERT_SUBDATA_PART4;
PROCEDURE SP_INSERT_SUBDATA_PART5;
PROCEDURE SP_INSERT_SUBDATA_PART6;
PROCEDURE SP_INSERT_SUBDATA_PART7;
PROCEDURE SP_INSERT_SUBDATA_PART8;
PROCEDURE SP_INSERT_SUBDATA_PART9;
PROCEDURE SP_INSERT_SUBDATA_PART10;
PROCEDURE SP_INSERT_STORE_DATA;
PROCEDURE INSERT_NODE(nodeId IN NUMBER,parentNodeId IN number, type IN VARCHAR2,Childcascade IN VARCHAR2);
PROCEDURE INSERT_WF(PROC_DEF_ID IN VARCHAR2);
PROCEDURE SP_ALF_POPULATE_NUM_FILTER_LIST ( IP_FILTER_TYPE IN Varchar2, IP_FILTER IN ALF_NUM_ARRAY, ip_sequence OUT Number );
PROCEDURE SP_ALF_POPULATE_NUM_FILTER_LIST ( IP_FILTER_TYPE IN Varchar2, IP_FILTER IN NUMBER, ip_sequence OUT Number );
PROCEDURE SP_MIGRATION_PROCESS_LOG(IP_OBJECT_NAME  IN VARCHAR2,IP_START_TIME IN DATE, IP_END_TIME IN DATE,IP_REF_NAME IN VARCHAR2, IP_REF_ID IN NUMBER, IP_PRE_COUNT IN NUMBER,IP_POST_COUNT IN NUMBER,IP_ERROR_CODE IN VARCHAR2, IP_ERROR_MSG IN VARCHAR2, IP_REMARKS IN VARCHAR2,IP_TABLE_NAME IN VARCHAR2);
END;
/